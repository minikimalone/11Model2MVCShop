<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 			column="prod_no" 			jdbcType="NUMERIC"/>
		<result property="prodName" 			column="prod_name" 			jdbcType="VARCHAR"/>
		<result property="prodDetail"	column="prod_detail" 		jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" 		jdbcType="VARCHAR" />
		<result property="price" 				column="price" 					jdbcType="NUMERIC" />
		<result property="fileName" 				column="image_file" 					jdbcType="VARCHAR" />
		<result property="regDate" 			column="reg_date" 		jdbcType="DATE" />
		<result property="prodTranCode" column="tran_status_code" jdbcType="VARCHAR"/>
		<result property="prodTranNo" column="tran_no" jdbcType="NUMERIC"/>
	
		<result property="prodQty" column="prod_QTY" jdbcType="NUMERIC"/>
		<result property="category1" column="category1" jdbcType="VARCHAR"/>
		<result property="category2" column="category2" jdbcType="VARCHAR"/>
		</resultMap>
	
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
	 	INSERT
		INTO product (prod_no, prod_name , prod_detail , manufacture_day , price, image_file, reg_date, PROD_QTY, category1, category2) 
		VALUES	 (seq_product_prod_no.nextval, #{prodName:VARCHAR} , #{prodDetail:VARCHAR} , #{manuDate:VARCHAR} , 
							#{price:INTEGER} , #{fileName:VARCHAR} , SYSDATE, #{prodQty:INTEGER},#{category1:VARCHAR}, #{category2:VARCHAR} )
	 </insert>
	 
	 
	 
	 <!-- SQL : SELECT ONE -->
	 
	 	 <select 	id="getProductName"	parameterType="map">
		SELECT prod_name 
		FROM product 
	 </select>
	 
	 
	 <select 	id="getProduct"	parameterType="string"	resultMap="productSelectMap">
		SELECT
		prod_no , prod_name , prod_detail , manufacture_day,  price ,  image_file , reg_date, prod_qty 		
		FROM product 
		WHERE prod_no = #{value}
	 </select>
	 
	 
	 
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day = #{manuDate} ,
			price		=	#{price},
			prod_Qty		=	#{prodQty},
			image_file= #{fileName}
			
			
			
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
		
		
		
	 <update	id="updateQuantity" parameterType="map"  >
	   	UPDATE product
	   	<set>
	   		prod_qty 	= prod_qty - #{purQty} 
 
	   	</set>
	
	   	WHERE prod_no = #{prodNo}
	 </update>
	
	
	
	<update	id="updateQuantity2" parameterType="map"  >
	   	UPDATE product
	   	<set>
	   		prod_qty 	= prod_qty + #{purQty} 
 
	   	</set>
	
	   	WHERE prod_no = #{prodNo}
	 </update>
		 	
		 		 	
	<!-- SQL : SELECT LIST -->





	
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	<if test="menu == 'search'">
	  									SELECT p.prod_no prod_no, p.prod_name prod_name, p.prod_detail prod_detail
	  										, p.manufacture_day manufacture_day	, p.price price, p.image_file image_file
	  										, p.reg_date reg_date, p.prod_qty 	
											FROM product p
										</if>
										<if test="menu == 'manage'">
										SELECT t.tran_no, p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day, p.price, p.image_file 
	  										, p.reg_date, NVL(t.tran_status_code,'0') tran_status_code, p.prod_qty
	  										FROM product p, transaction t
										</if>
										<where>
											<if test="menu == 'manage'">
											t.prod_no=p.prod_no(+)
											</if>
											<if test="searchCondition != null">												
												<choose>	
													<when test="searchCondition == 0 and searchKeyword !='' ">
										 				and p.prod_no like '%'||#{searchKeyword}||'%'
													</when>
													<when test="searchCondition == 1 and searchKeyword !='' ">
										 				and p.prod_name like '%'||#{searchKeyword}||'%'
													</when>
													<when test="searchCondition == 2 and searchKeyword !='' ">
										 				and p.price like '%'||#{searchKeyword}||'%'
													</when>
												</choose>											
											</if>
											
										</where>
										<choose>
											<when test="orderByLowPrice == 1">
											ORDER BY price asc
											</when>
											<when test="orderByHighPrice == 1">
											ORDER BY price desc
											</when>
											<otherwise>
											ORDER BY prod_name asc
											</otherwise>
										</choose> 
										) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	<if test="menu == 'search'">
	  				SELECT p.prod_no prod_no, p.prod_name, p.prod_detail, 
	  				p.manufacture_day, p.price, p.image_file, p.reg_date, p.prod_qty
					FROM product p
					</if>
						<if test="menu == 'manage'">
					SELECT t.tran_no, p.prod_no, p.prod_name, p.prod_detail, p.manufacture_day, p.price, p.image_file 
	  										, p.reg_date, NVL(t.tran_status_code,'0') tran_status_code, p.prod_qty
	  										FROM product p, transaction t
						</if>
										<where>
											<if test="menu == 'manage'">
											t.prod_no = p.prod_no(+)
											</if>
											<if test="searchCondition != null">												
												<choose>	
													<when test="searchCondition == 0 and searchKeyword !='' ">
										 				and p.prod_no like '%'||#{searchKeyword}||'%'
													</when>
													<when test="searchCondition == 1 and searchKeyword !='' ">
										 				and p.prod_name like '%'||#{searchKeyword}||'%'
													</when>
													<when test="searchCondition == 2 and searchKeyword !='' ">
										 				and p.price like '%'||#{searchKeyword}||'%'
													</when>
												</choose>											
											</if>
											
										</where> ) countTable						
	 </select>
	 
</mapper>